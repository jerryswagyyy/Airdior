
public class calculator{
    public static  void main(String args[]){
        Formular formular = new Formular();
        Datapdct3 datapdct3 = new Datapdct3();
        Datapdct6 datapdct6 = new Datapdct6();
        datapdct3.quest();
        datapdct6.quest();
        Scanner sc = new Scanner(System.in);
        System.out.println("请选择难度模式：");
        int model = sc.nextInt();
        if(model==1) {
            System.out.println("算式生成：" + datapdct6.val);
            System.out.println("有括号形式"+formular.BrackeForm(formular.toList(datapdct6.val)));
            System.out.println("算式列表生成：" + formular.toList(datapdct6.val));
            System.out.println("后缀表达式：" + formular.solve(formular.toList(datapdct6.val)));
            System.out.println("括号形式后缀表达式"+formular.solve(formular.BrackeForm(formular.toList(datapdct6.val))));
            System.out.println("算式的值：" + formular.calculateValue(formular.solve(formular.toList(datapdct6.val))));
            System.out.println("括号形式的值"+formular.calculateValue(formular.solve(formular.BrackeForm(formular.toList(datapdct6.val)))));
        }else if(model==2){
            System.out.println("算式生成：" + datapdct3.val);
            System.out.println("算式列表生成：" + formular.toList(datapdct3.val));
            System.out.println("后缀表达式：" + formular.solve(formular.toList(datapdct3.val)));
            System.out.println("算式的值：" + formular.calculateValue(formular.solve(formular.toList(datapdct3.val))));
        }
    }
}
